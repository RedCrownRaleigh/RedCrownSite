/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jFJFziXZKhcspnrEU1bpXe
// Component: -JSYXb5Kcs-

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Analytics from "../../Analytics"; // plasmic-import: n519WuZQnL/component
import PageHeader from "../../PageHeader"; // plasmic-import: eDzLCW1ZjEb/component
import NavBar from "../../NavBar"; // plasmic-import: 5wmWvgxHSq/component
import Tilt from "@plasmicpkgs/react-parallax-tilt";
import PageFooter from "../../PageFooter"; // plasmic-import: MxvU_cyYFXz/component

import { useScreenVariants as useScreenVariantsyX0GVx02K4UjjJ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: yX0gVX02K4ujjJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: jFJFziXZKhcspnrEU1bpXe/projectcss
import sty from "./PlasmicGallery.module.css"; // plasmic-import: -JSYXb5Kcs-/css

createPlasmicElementProxy;

export type PlasmicGallery__VariantMembers = {};
export type PlasmicGallery__VariantsArgs = {};
type VariantPropType = keyof PlasmicGallery__VariantsArgs;
export const PlasmicGallery__VariantProps = new Array<VariantPropType>();

export type PlasmicGallery__ArgsType = {};
type ArgPropType = keyof PlasmicGallery__ArgsType;
export const PlasmicGallery__ArgProps = new Array<ArgPropType>();

export type PlasmicGallery__OverridesType = {
  root?: Flex__<"div">;
  analytics?: Flex__<typeof Analytics>;
  pageHeader?: Flex__<typeof PageHeader>;
  section?: Flex__<"section">;
  navBar?: Flex__<typeof NavBar>;
  mainContent?: Flex__<"div">;
  pageFooter?: Flex__<typeof PageFooter>;
};

export interface DefaultGalleryProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicGallery__RenderFunc(props: {
  variants: PlasmicGallery__VariantsArgs;
  args: PlasmicGallery__ArgsType;
  overrides: PlasmicGallery__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsyX0GVx02K4UjjJ()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          plasmic_plasmic_rich_components_css.plasmic_tokens,
          sty.root
        )}
      >
        <Analytics
          data-plasmic-name={"analytics"}
          data-plasmic-override={overrides.analytics}
          className={classNames("__wab_instance", sty.analytics)}
        />

        <PageHeader
          data-plasmic-name={"pageHeader"}
          data-plasmic-override={overrides.pageHeader}
          className={classNames("__wab_instance", sty.pageHeader)}
        />

        <section
          data-plasmic-name={"section"}
          data-plasmic-override={overrides.section}
          className={classNames(projectcss.all, sty.section)}
        />

        <NavBar
          data-plasmic-name={"navBar"}
          data-plasmic-override={overrides.navBar}
          className={classNames("__wab_instance", sty.navBar)}
        />

        <div
          data-plasmic-name={"mainContent"}
          data-plasmic-override={overrides.mainContent}
          className={classNames(projectcss.all, sty.mainContent)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ocKw7
            )}
          >
            {"Gallery"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__qDbN8
            )}
          >
            {
              "To view the photos from each event, click on the poster of the event you want to view. It will open the site in a new tab"
            }
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___80Vy0)}>
            <div
              className={classNames(projectcss.all, sty.freeBox__xctN)}
              onClick={async event => {
                const $steps = {};

                $steps["goToHttpsImageshackComA4Jrw71"] = true
                  ? (() => {
                      const actionArgs = {
                        destination: "https://imageshack.com/a/4JRW7/1"
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToHttpsImageshackComA4Jrw71"] != null &&
                  typeof $steps["goToHttpsImageshackComA4Jrw71"] === "object" &&
                  typeof $steps["goToHttpsImageshackComA4Jrw71"].then ===
                    "function"
                ) {
                  $steps["goToHttpsImageshackComA4Jrw71"] = await $steps[
                    "goToHttpsImageshackComA4Jrw71"
                  ];
                }
              }}
            >
              <Tilt className={classNames("__wab_instance", sty.tilt__f1Hmv)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__kT98B)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHttpsImageshackComA4Jrw71"] = true
                      ? (() => {
                          const actionArgs = {
                            destination: "https://imageshack.com/a/4JRW7/1"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHttpsImageshackComA4Jrw71"] != null &&
                      typeof $steps["goToHttpsImageshackComA4Jrw71"] ===
                        "object" &&
                      typeof $steps["goToHttpsImageshackComA4Jrw71"].then ===
                        "function"
                    ) {
                      $steps["goToHttpsImageshackComA4Jrw71"] = await $steps[
                        "goToHttpsImageshackComA4Jrw71"
                      ];
                    }
                  }}
                  src={{
                    src: "/plasmic/red_crown/images/flyer1MinJpg.jpg",
                    fullWidth: 2550,
                    fullHeight: 3300,
                    aspectRatio: undefined
                  }}
                />
              </Tilt>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__tDpp)}
              onClick={async event => {
                const $steps = {};

                $steps["goToHttpsImageshackComAZnjw71"] = true
                  ? (() => {
                      const actionArgs = {
                        destination: "https://imageshack.com/a/ZNJW7/1"
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToHttpsImageshackComAZnjw71"] != null &&
                  typeof $steps["goToHttpsImageshackComAZnjw71"] === "object" &&
                  typeof $steps["goToHttpsImageshackComAZnjw71"].then ===
                    "function"
                ) {
                  $steps["goToHttpsImageshackComAZnjw71"] = await $steps[
                    "goToHttpsImageshackComAZnjw71"
                  ];
                }
              }}
            >
              <Tilt className={classNames("__wab_instance", sty.tilt__xxq0J)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xKS1)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHttpsImageshackComAZnjw71"] = true
                      ? (() => {
                          const actionArgs = {
                            destination: "https://imageshack.com/a/ZNJW7/1"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHttpsImageshackComAZnjw71"] != null &&
                      typeof $steps["goToHttpsImageshackComAZnjw71"] ===
                        "object" &&
                      typeof $steps["goToHttpsImageshackComAZnjw71"].then ===
                        "function"
                    ) {
                      $steps["goToHttpsImageshackComAZnjw71"] = await $steps[
                        "goToHttpsImageshackComAZnjw71"
                      ];
                    }
                  }}
                  src={{
                    src: "/plasmic/red_crown/images/kPopBashWin95PosterMinJpg.jpg",
                    fullWidth: 4400,
                    fullHeight: 5600,
                    aspectRatio: undefined
                  }}
                />
              </Tilt>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__mIu13)}
              onClick={async event => {
                const $steps = {};

                $steps["goToHttpsImageshackComA2QzW7"] = true
                  ? (() => {
                      const actionArgs = {
                        destination: "https://imageshack.com/a/2qzW7"
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToHttpsImageshackComA2QzW7"] != null &&
                  typeof $steps["goToHttpsImageshackComA2QzW7"] === "object" &&
                  typeof $steps["goToHttpsImageshackComA2QzW7"].then ===
                    "function"
                ) {
                  $steps["goToHttpsImageshackComA2QzW7"] = await $steps[
                    "goToHttpsImageshackComA2QzW7"
                  ];
                }
              }}
            >
              <Tilt className={classNames("__wab_instance", sty.tilt__dBmZs)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__a1EIu)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHttpsImageshackComA2QzW7"] = true
                      ? (() => {
                          const actionArgs = {
                            destination: "https://imageshack.com/a/2qzW7"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHttpsImageshackComA2QzW7"] != null &&
                      typeof $steps["goToHttpsImageshackComA2QzW7"] ===
                        "object" &&
                      typeof $steps["goToHttpsImageshackComA2QzW7"].then ===
                        "function"
                    ) {
                      $steps["goToHttpsImageshackComA2QzW7"] = await $steps[
                        "goToHttpsImageshackComA2QzW7"
                      ];
                    }
                  }}
                  src={{
                    src: "/plasmic/red_crown/images/poster11X14Min1Jpg.jpg",
                    fullWidth: 3303,
                    fullHeight: 4232,
                    aspectRatio: undefined
                  }}
                />
              </Tilt>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__pv0Yo)}
              onClick={async event => {
                const $steps = {};

                $steps["goToHttpsImageshackComAWbqW71"] = true
                  ? (() => {
                      const actionArgs = {
                        destination: "https://imageshack.com/a/wbqW7/1"
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToHttpsImageshackComAWbqW71"] != null &&
                  typeof $steps["goToHttpsImageshackComAWbqW71"] === "object" &&
                  typeof $steps["goToHttpsImageshackComAWbqW71"].then ===
                    "function"
                ) {
                  $steps["goToHttpsImageshackComAWbqW71"] = await $steps[
                    "goToHttpsImageshackComAWbqW71"
                  ];
                }
              }}
            >
              <Tilt className={classNames("__wab_instance", sty.tilt__byOl2)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__dqR58)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHttpsImageshackComAWbqW71"] = true
                      ? (() => {
                          const actionArgs = {
                            destination: "https://imageshack.com/a/wbqW7/1"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHttpsImageshackComAWbqW71"] != null &&
                      typeof $steps["goToHttpsImageshackComAWbqW71"] ===
                        "object" &&
                      typeof $steps["goToHttpsImageshackComAWbqW71"].then ===
                        "function"
                    ) {
                      $steps["goToHttpsImageshackComAWbqW71"] = await $steps[
                        "goToHttpsImageshackComAWbqW71"
                      ];
                    }
                  }}
                  src={{
                    src: "/plasmic/red_crown/images/afterpartyPosterMinJpg.jpg",
                    fullWidth: 792,
                    fullHeight: 1008,
                    aspectRatio: undefined
                  }}
                />
              </Tilt>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__ttTv5)}
              onClick={async event => {
                const $steps = {};

                $steps["goToHttpsImageshackComARbqW71"] = true
                  ? (() => {
                      const actionArgs = {
                        destination: "https://imageshack.com/a/rbqW7/1"
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToHttpsImageshackComARbqW71"] != null &&
                  typeof $steps["goToHttpsImageshackComARbqW71"] === "object" &&
                  typeof $steps["goToHttpsImageshackComARbqW71"].then ===
                    "function"
                ) {
                  $steps["goToHttpsImageshackComARbqW71"] = await $steps[
                    "goToHttpsImageshackComARbqW71"
                  ];
                }
              }}
            >
              <Tilt className={classNames("__wab_instance", sty.tilt__omVA)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__u7QWj)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHttpsImageshackComARbqW71"] = true
                      ? (() => {
                          const actionArgs = {
                            destination: "https://imageshack.com/a/rbqW7/1"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHttpsImageshackComARbqW71"] != null &&
                      typeof $steps["goToHttpsImageshackComARbqW71"] ===
                        "object" &&
                      typeof $steps["goToHttpsImageshackComARbqW71"].then ===
                        "function"
                    ) {
                      $steps["goToHttpsImageshackComARbqW71"] = await $steps[
                        "goToHttpsImageshackComARbqW71"
                      ];
                    }
                  }}
                  src={{
                    src: "/plasmic/red_crown/images/poster11X14MinJpg.jpg",
                    fullWidth: 3303,
                    fullHeight: 4232,
                    aspectRatio: undefined
                  }}
                />
              </Tilt>
            </div>
          </div>
          <PageFooter
            data-plasmic-name={"pageFooter"}
            data-plasmic-override={overrides.pageFooter}
            className={classNames("__wab_instance", sty.pageFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "analytics",
    "pageHeader",
    "section",
    "navBar",
    "mainContent",
    "pageFooter"
  ],
  analytics: ["analytics"],
  pageHeader: ["pageHeader"],
  section: ["section"],
  navBar: ["navBar"],
  mainContent: ["mainContent", "pageFooter"],
  pageFooter: ["pageFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  analytics: typeof Analytics;
  pageHeader: typeof PageHeader;
  section: "section";
  navBar: typeof NavBar;
  mainContent: "div";
  pageFooter: typeof PageFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicGallery__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicGallery__VariantsArgs;
    args?: PlasmicGallery__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicGallery__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicGallery__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicGallery__ArgProps,
          internalVariantPropNames: PlasmicGallery__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicGallery__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGallery";
  } else {
    func.displayName = `PlasmicGallery.${nodeName}`;
  }
  return func;
}

export const PlasmicGallery = Object.assign(
  // Top-level PlasmicGallery renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    analytics: makeNodeComponent("analytics"),
    pageHeader: makeNodeComponent("pageHeader"),
    section: makeNodeComponent("section"),
    navBar: makeNodeComponent("navBar"),
    mainContent: makeNodeComponent("mainContent"),
    pageFooter: makeNodeComponent("pageFooter"),

    // Metadata about props expected for PlasmicGallery
    internalVariantProps: PlasmicGallery__VariantProps,
    internalArgProps: PlasmicGallery__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicGallery;
/* prettier-ignore-end */
