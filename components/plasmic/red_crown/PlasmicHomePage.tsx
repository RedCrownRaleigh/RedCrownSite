// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jFJFziXZKhcspnrEU1bpXe
// Component: vbUGRBZ_l1

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavBar from "../../NavBar"; // plasmic-import: 5wmWvgxHSq/component
import PageHeader from "../../PageHeader"; // plasmic-import: eDzLCW1ZjEb/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import Button from "../../Button"; // plasmic-import: vE0DoM1TU6rn9z/component
import PageFooter from "../../PageFooter"; // plasmic-import: MxvU_cyYFXz/component
import Analytics from "../../Analytics"; // plasmic-import: n519WuZQnL/component

import { useScreenVariants as useScreenVariantsyX0GVx02K4UjjJ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: yX0gVX02K4ujjJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: jFJFziXZKhcspnrEU1bpXe/projectcss
import sty from "./PlasmicHomePage.module.css"; // plasmic-import: vbUGRBZ_l1/css

createPlasmicElementProxy;

export type PlasmicHomePage__VariantMembers = {};
export type PlasmicHomePage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomePage__VariantsArgs;
export const PlasmicHomePage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomePage__ArgsType = {};
type ArgPropType = keyof PlasmicHomePage__ArgsType;
export const PlasmicHomePage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomePage__OverridesType = {
  page?: Flex__<"div">;
  navBar?: Flex__<typeof NavBar>;
  pageHeader?: Flex__<typeof PageHeader>;
  mainContent?: Flex__<"div">;
  pageFooter?: Flex__<typeof PageFooter>;
  analytics?: Flex__<typeof Analytics>;
  wrapper?: Flex__<"section">;
};

export interface DefaultHomePageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomePage__RenderFunc(props: {
  variants: PlasmicHomePage__VariantsArgs;
  args: PlasmicHomePage__ArgsType;
  overrides: PlasmicHomePage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsyX0GVx02K4UjjJ()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomePage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomePage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomePage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"page"}
        data-plasmic-override={overrides.page}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          plasmic_plasmic_rich_components_css.plasmic_tokens,
          sty.page
        )}
      >
        {(
          hasVariant(globalVariants, "screen", "smallMobile")
            ? true
            : hasVariant(globalVariants, "screen", "mobileOnly")
            ? true
            : false
        ) ? (
          <NavBar
            data-plasmic-name={"navBar"}
            data-plasmic-override={overrides.navBar}
            className={classNames("__wab_instance", sty.navBar)}
          />
        ) : null}
        <PageHeader
          data-plasmic-name={"pageHeader"}
          data-plasmic-override={overrides.pageHeader}
          className={classNames("__wab_instance", sty.pageHeader)}
        />

        <section className={classNames(projectcss.all, sty.section___6Cmu)}>
          <Embed
            className={classNames("__wab_instance", sty.embedHtml__dFrLf)}
            code={
              hasVariant(globalVariants, "screen", "smallMobile")
                ? '<iframe width="380" height="315" src="https://www.youtube.com/embed/qwix5RYDP2A" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>'
                : '<iframe width="560" height="315" src="https://www.youtube.com/embed/qwix5RYDP2A" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>'
            }
          />
        </section>
        <div
          data-plasmic-name={"mainContent"}
          data-plasmic-override={overrides.mainContent}
          className={classNames(projectcss.all, sty.mainContent)}
        >
          <section className={classNames(projectcss.all, sty.section__mGxCx)}>
            <div
              className={classNames(projectcss.all, sty.columns__vAWr1)}
              onClick={async event => {
                const $steps = {};

                $steps["updateStateVariable"] = true
                  ? (() => {
                      const actionArgs = {};
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;
                        undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateStateVariable"] != null &&
                  typeof $steps["updateStateVariable"] === "object" &&
                  typeof $steps["updateStateVariable"].then === "function"
                ) {
                  $steps["updateStateVariable"] = await $steps[
                    "updateStateVariable"
                  ];
                }
              }}
            >
              <div className={classNames(projectcss.all, sty.column__vkeHp)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__r6Pv6)}
                  displayHeight={"411px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"86.63%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/red_crown/images/maykpopbashJpg.jpg",
                    fullWidth: 5400,
                    fullHeight: 7200,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__akEe4)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__brTcC
                  )}
                >
                  {"K-Pop Bash @ Ruby Deluxe"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pMOuN
                  )}
                >
                  {"May 24th @ 10pm"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0Qhdg
                  )}
                >
                  {"$12 online, $15 at door"}
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___01A4R)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__aJdZs)}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yaZci
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__bqjc9
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__yK2Fp
                          )}
                        >
                          {"Must have Government issued ID to enter"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__pagRi
                          )}
                        >
                          {"Must be 18 years of age or older"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__dy9BY
                          )}
                        >
                          {"Pre-sale online tickets are guaranteed entry"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__hjAXq
                          )}
                        >
                          {"Zero tolerance for harassment "}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__w1VEs
                          )}
                        >
                          {"No outside alcohol or weapons"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__pei3B
                          )}
                        >
                          {"K-Pop all night with your DJ: Rusty!"}
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__sE5Qj)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__zima)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__hFwdL)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button___96LMz
                        )}
                        link={
                          "https://www.sickening.events/e/red-crown-raleigh-presents-k-pop-bash-may/tickets"
                        }
                        target={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vUgFh
                          )}
                        >
                          {"Tickets"}
                        </div>
                      </Button>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__uhfDe)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button___53DKb
                        )}
                        link={"https://forms.gle/pCGrAztHJdgzHACm7"}
                        target={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uhBt
                          )}
                        >
                          {"Requests"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.columns__heLdj)}
              onClick={async event => {
                const $steps = {};

                $steps["updateStateVariable"] = true
                  ? (() => {
                      const actionArgs = {};
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;
                        undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateStateVariable"] != null &&
                  typeof $steps["updateStateVariable"] === "object" &&
                  typeof $steps["updateStateVariable"].then === "function"
                ) {
                  $steps["updateStateVariable"] = await $steps[
                    "updateStateVariable"
                  ];
                }
              }}
            >
              <div className={classNames(projectcss.all, sty.column___8Sg9B)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ifJgD)}
                  displayHeight={"411px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"86.63%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/red_crown/images/galzecyconrave27Jpg.jpg",
                    fullWidth: 3600,
                    fullHeight: 4800,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___91Ed5)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vaq1T
                  )}
                >
                  {"K-Pop Bash Raleigh: PCD Edition"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uiN5Q
                  )}
                >
                  {"August 30th @ 10pm; Ruby Deluxe"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xSVio
                  )}
                >
                  {"Pay what you can: $15 recommended, $5 minimum"}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__i1YPu)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__zDpaR)}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rSrjY
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__if8Ns
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__bBd4F
                          )}
                        >
                          {"Must have Government issued ID to enter"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__nlSuW
                          )}
                        >
                          {"Pre-sale online tickets are guaranteed entry"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__jcp7K
                          )}
                        >
                          {"Zero tolerance for harassment "}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__ziQag
                          )}
                        >
                          {"No outside alcohol or weapons"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__sjdqI
                          )}
                        >
                          {"K-Pop all night with your DJ: Rusty!"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__tt2Sv
                          )}
                        >
                          {
                            "Broke after all the tours? No worries! Pay what you can at the door! ($5 minimum)"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__pmKy)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__blem5)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___9VXe)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button___5Zd3X
                        )}
                        link={
                          "https://www.sickening.events/e/game-set-rave-galaxycon-after-party/tickets"
                        }
                        target={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wW6QV
                          )}
                        >
                          {"Tickets"}
                        </div>
                      </Button>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__ahSl)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__f0Oa
                        )}
                        link={"https://forms.gle/pCGrAztHJdgzHACm7"}
                        target={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dptQ
                          )}
                        >
                          {"Requests"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.columns__chfer)}
              onClick={async event => {
                const $steps = {};

                $steps["updateStateVariable"] = true
                  ? (() => {
                      const actionArgs = {};
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;
                        undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateStateVariable"] != null &&
                  typeof $steps["updateStateVariable"] === "object" &&
                  typeof $steps["updateStateVariable"].then === "function"
                ) {
                  $steps["updateStateVariable"] = await $steps[
                    "updateStateVariable"
                  ];
                }
              }}
            >
              <div className={classNames(projectcss.all, sty.column__qvbRh)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__hKjzF)}
                  displayHeight={"411px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"86.63%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/red_crown/images/kpopbashcharlotte1Jpg.jpg",
                    fullWidth: 3600,
                    fullHeight: 4800,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__kuZ19)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ssjkv
                  )}
                >
                  {"K-Pop Bash Charlotte"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qfIhl
                  )}
                >
                  {"August 30th @ 9pm; Amos' Southend"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ludKj
                  )}
                >
                  {"Tickets: $15 21+, $20 18+"}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__dUxjk)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__ySg49)}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7Mrdm
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__sHu7I
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__yaX4
                          )}
                        >
                          {"Must have Government issued ID to enter"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___4Nmei
                          )}
                        >
                          {"Pre-sale online tickets are guaranteed entry"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___28O6R
                          )}
                        >
                          {"Zero tolerance for harassment "}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__fVo4C
                          )}
                        >
                          {"No outside alcohol or weapons"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__sPc5S
                          )}
                        >
                          {"K-Pop all night with your DJ: Rusty!"}
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___5H3Nn)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__dyQlJ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__ax403)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__tquix
                        )}
                        link={
                          "https://www.etix.com/ticket/p/73949774/kpop-bash-with-dj-rusty-charlotte-amossouthend"
                        }
                        target={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__neqqK
                          )}
                        >
                          {"Tickets"}
                        </div>
                      </Button>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__jWl90)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__r9O
                        )}
                        link={"https://forms.gle/pCGrAztHJdgzHACm7"}
                        target={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__o6Du0
                          )}
                        >
                          {"Requests"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <div className={classNames(projectcss.all, sty.columns__c1DY)}>
            <div className={classNames(projectcss.all, sty.column__zFlKv)}>
              <Button
                className={classNames("__wab_instance", sty.button__f1PRq)}
                link={"http:\\\\www.instagram.com\\redcrown.events"}
                target={true}
              >
                {"Instagram"}
              </Button>
            </div>
            <div className={classNames(projectcss.all, sty.column__pn93D)}>
              <Button
                className={classNames("__wab_instance", sty.button__xVmQg)}
                link={"https://discord.gg/mv6cbgfBCZ"}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9UlYu
                  )}
                >
                  {"Discord"}
                </div>
              </Button>
            </div>
            <div className={classNames(projectcss.all, sty.column__tUtK)}>
              <Button
                className={classNames("__wab_instance", sty.button___839Ha)}
                link={"http://eepurl.com/izpp-g"}
                target={true}
              >
                {"Mailing List"}
              </Button>
            </div>
          </div>
          <section className={classNames(projectcss.all, sty.section__ho674)}>
            <Embed
              className={classNames("__wab_instance", sty.embedHtml__cmRri)}
              code={
                '<iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/5C8P4vJB7MSCpmnw9a5HcE?utm_source=generator" width="100%" height="300%" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>'
              }
            />
          </section>
          <section className={classNames(projectcss.all, sty.section__hvG6A)} />

          <PageFooter
            data-plasmic-name={"pageFooter"}
            data-plasmic-override={overrides.pageFooter}
            className={classNames("__wab_instance", sty.pageFooter)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__n4ZLm)}>
            <Analytics
              data-plasmic-name={"analytics"}
              data-plasmic-override={overrides.analytics}
              className={classNames("__wab_instance", sty.analytics)}
            />

            <section
              data-plasmic-name={"wrapper"}
              data-plasmic-override={overrides.wrapper}
              className={classNames(projectcss.all, sty.wrapper)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  page: [
    "page",
    "navBar",
    "pageHeader",
    "mainContent",
    "pageFooter",
    "analytics",
    "wrapper"
  ],
  navBar: ["navBar"],
  pageHeader: ["pageHeader"],
  mainContent: ["mainContent", "pageFooter", "analytics", "wrapper"],
  pageFooter: ["pageFooter"],
  analytics: ["analytics"],
  wrapper: ["wrapper"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  page: "div";
  navBar: typeof NavBar;
  pageHeader: typeof PageHeader;
  mainContent: "div";
  pageFooter: typeof PageFooter;
  analytics: typeof Analytics;
  wrapper: "section";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomePage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomePage__VariantsArgs;
    args?: PlasmicHomePage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomePage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomePage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomePage__ArgProps,
          internalVariantPropNames: PlasmicHomePage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomePage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "page") {
    func.displayName = "PlasmicHomePage";
  } else {
    func.displayName = `PlasmicHomePage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomePage = Object.assign(
  // Top-level PlasmicHomePage renders the root element
  makeNodeComponent("page"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    pageHeader: makeNodeComponent("pageHeader"),
    mainContent: makeNodeComponent("mainContent"),
    pageFooter: makeNodeComponent("pageFooter"),
    analytics: makeNodeComponent("analytics"),
    wrapper: makeNodeComponent("wrapper"),

    // Metadata about props expected for PlasmicHomePage
    internalVariantProps: PlasmicHomePage__VariantProps,
    internalArgProps: PlasmicHomePage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Home page",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomePage;
/* prettier-ignore-end */
